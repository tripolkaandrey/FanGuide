@model FanGuide.ViewModels.AthleteFormViewModel
@{
    ViewBag.Title = "AthleteForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add a new athlete</h2>

@using (Html.BeginForm("Create", "Athletes"))
{
    @Html.ValidationSummary(true)
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Name)
        @Html.TextBoxFor(x => x.Athlete.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.SportId)
        @Html.DropDownListFor(x => x.Athlete.SportId, new SelectList(Model.Sports, "Id", "Name"), "Select Sport", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.SportId)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.TeamId)
        @Html.DropDownListFor(x => x.Athlete.TeamId, new SelectList(Model.Sports, "Id", "Name"), "Select Sport", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.SportId)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Sex)
        @Html.DropDownListFor(x => x.Athlete.Sex, new SelectList(new List<string>()
        {
            "Man",
            "Woman"
        }), new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Sex)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Weight)
        @Html.TextBoxFor(x => x.Athlete.Weight, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Weight)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Height)
        @Html.TextBoxFor(x => x.Athlete.Height, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Height)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Age)
        @Html.TextBoxFor(x => x.Athlete.Age, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Age)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Citizenship)
        @Html.TextBoxFor(x => x.Athlete.Citizenship, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Citizenship)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Origin)
        @Html.TextBoxFor(x => x.Athlete.Origin, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Origin)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Athlete.Achievements)
        @Html.TextBoxFor(x => x.Athlete.Achievements, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Athlete.Achievements)
    </div>
    @Html.HiddenFor(x => x.Athlete.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}

<script type="text/javascript">

    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#Sports").change(function () {
            $("#Teams").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTeams")',
                dataType: 'json',
                data: { id: $("#Teams").val() },
                success: function (mems) {
                    $.each(mems, function (i, member) {
                        $("#Teams").append('<option value="'
                            + member.Value + '">'
                            + member.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

}
